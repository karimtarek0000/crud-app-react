{"version":3,"file":"static/js/498.4defa7ca.chunk.js","mappings":"iLAiBA,UAZuB,WACrB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GACAE,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAU,IAAlDH,OAMR,OAJAI,EAAAA,EAAAA,YAAU,WACRR,GAASS,EAAAA,EAAAA,SAAQP,GACnB,GAAG,CAACF,EAAUE,IAEPE,CACT,C,yKC6EA,UAlFA,WACE,IAAMM,GAAWC,EAAAA,EAAAA,MACXP,GAASQ,EAAAA,EAAAA,WACPC,GAAYR,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAU,IAAnDM,QAER,GAAkCC,EAAAA,EAAAA,UAAS,IAAG,eAAvCC,EAAS,KAAEC,EAAY,KAC9B,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAC5B,GAAsCJ,EAAAA,EAAAA,WAAS,GAAK,eAA7CK,EAAW,KAAEC,EAAc,KAC5BpB,GAAWC,EAAAA,EAAAA,OAEjBO,EAAAA,EAAAA,YAAU,WACR,GAAIJ,EAAQ,CACV,IAAQiB,EAAgBjB,EAAhBiB,MAAOC,EAASlB,EAATkB,KACfN,EAAaK,GAAS,IACtBH,EAAYI,GAAQ,GACtB,CACF,GAAG,CAAClB,KAEJI,EAAAA,EAAAA,YAAU,WACR,OAAO,kBAAMR,GAASuB,EAAAA,EAAAA,eAAe,CACvC,GAAG,CAACvB,IAEJ,IAWMwB,EAAe,yCAAG,WAAOC,GAAC,sEAGN,OAFxBA,EAAEC,iBAAiB,SAEjBN,GAAe,GAAO,SAEhBpB,GACJ2B,EAAAA,EAAAA,aAAW,kBAAKvB,GAAM,IAAEiB,MAAON,EAAWO,KAAML,MAChDW,SAAS,KAAD,EAEVlB,EAAS,KACTmB,EAAAA,GAAAA,QAAc,mCAAmC,gDAEjDA,EAAAA,GAAAA,MAAY,2BAA2B,yDAE1C,gBAdoB,sCAgBrB,OACE,SAAC,UAAO,CAACC,KAAMX,EAAY,UACzB,UAAC,IAAI,CAACY,SAAUP,EAAgB,WAC9B,UAAC,UAAU,CAACQ,UAAU,OAAOC,UAAU,iBAAgB,WACrD,SAAC,UAAU,0BACX,SAAC,YAAY,CACXC,MAAOnB,EACPoB,SAlCqB,SAACV,GAC9BT,EAAaS,EAAEW,OAAOF,MACxB,EAiCUG,KAAK,OACLC,YAAY,mBAGhB,UAAC,UAAU,CAACN,UAAU,OAAOC,UAAU,iBAAgB,WACrD,SAAC,UAAU,gCACX,SAAC,YAAY,CACXC,MAAOjB,EACPkB,SAxC2B,SAACV,GACpCP,EAAYO,EAAEW,OAAOF,MACvB,EAuCUG,KAAK,OACLE,GAAG,WACHD,YAAY,mBAIhB,SAAC,UAAS,CACRzB,QAASA,EACTQ,MAAM,YACNmB,WA7CKzB,GAAaE,SAkD5B,C","sources":["hooks/useNoteDetails.js","pages/edit/EditNote.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getNote } from \"../store/notesSlice\";\n\nconst useNoteDetails = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const { record } = useSelector((state) => state.notesSlice);\n\n  useEffect(() => {\n    dispatch(getNote(id));\n  }, [dispatch, id]);\n\n  return record;\n};\n\nexport default useNoteDetails;\n","import { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toast } from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport SubmitBtn from \"../../components/buttons/SubmitBtn\";\nimport Loading from \"../../components/loading/Loading\";\nimport useNoteDetails from \"../../hooks/useNoteDetails\";\nimport { cleanRecord, updateNote } from \"../../store/notesSlice\";\n\nfunction EditNote() {\n  const navigate = useNavigate();\n  const record = useNoteDetails();\n  const { loading } = useSelector((state) => state.notesSlice);\n\n  const [titleNote, setTitleNote] = useState(\"\");\n  const [descNote, setDescNote] = useState(\"\");\n  const [stopLoading, setStopLoading] = useState(true);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (record) {\n      const { title, desc } = record;\n      setTitleNote(title || \"\");\n      setDescNote(desc || \"\");\n    }\n  }, [record]);\n\n  useEffect(() => {\n    return () => dispatch(cleanRecord());\n  }, [dispatch]);\n\n  const changeTitleNoteHandler = (e) => {\n    setTitleNote(e.target.value);\n  };\n  const changeNoteDescriptionHandler = (e) => {\n    setDescNote(e.target.value);\n  };\n\n  const statusDisabledSubmit = () => {\n    return !!!(titleNote && descNote);\n  };\n\n  const editNoteHandler = async (e) => {\n    e.preventDefault();\n    try {\n      setStopLoading(false);\n\n      await dispatch(\n        updateNote({ ...record, title: titleNote, desc: descNote })\n      ).unwrap();\n\n      navigate(\"/\");\n      toast.success(\"Has been edit note successfully\");\n    } catch {\n      toast.error(\"Error please try again!\");\n    }\n  };\n\n  return (\n    <Loading stop={stopLoading}>\n      <Form onSubmit={editNoteHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Title note</Form.Label>\n          <Form.Control\n            value={titleNote}\n            onChange={changeTitleNoteHandler}\n            type=\"text\"\n            placeholder=\"Title note\"\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Description note</Form.Label>\n          <Form.Control\n            value={descNote}\n            onChange={changeNoteDescriptionHandler}\n            type=\"text\"\n            as=\"textarea\"\n            placeholder=\"Write note\"\n          />\n        </Form.Group>\n\n        <SubmitBtn\n          loading={loading}\n          title=\"Edit note\"\n          disabled={statusDisabledSubmit()}\n        />\n      </Form>\n    </Loading>\n  );\n}\n\nexport default EditNote;\n"],"names":["dispatch","useDispatch","id","useParams","record","useSelector","state","notesSlice","useEffect","getNote","navigate","useNavigate","useNoteDetails","loading","useState","titleNote","setTitleNote","descNote","setDescNote","stopLoading","setStopLoading","title","desc","cleanRecord","editNoteHandler","e","preventDefault","updateNote","unwrap","toast","stop","onSubmit","className","controlId","value","onChange","target","type","placeholder","as","disabled"],"sourceRoot":""}