{"version":3,"file":"static/js/950.aaf8ef5e.chunk.js","mappings":"4PASMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJG,QACC,2CACA,sCAEDC,SAAS,sBACZC,SAAUL,EAAAA,KACPG,QACC,kFACA,gDAEDC,SAAS,2BA2Ed,UAxEA,WACE,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,SAAS,IAAlDH,QAOFI,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cANoB,CACpBd,MAAO,GACPG,SAAU,IAKVN,iBAAAA,EACMkB,SAAQ,SAACC,EAAK,GAAiB,OAAD,gHAEpB,OAFOC,EAAS,EAATA,UAAS,SAE5BA,IAAY,SACNb,GAASc,EAAAA,EAAAA,OAAMF,IAAOG,SAAS,KAAD,EACpCb,EAAS,KACTc,EAAAA,GAAAA,QAAc,sBAAsB,gDAEpCA,EAAAA,GAAAA,MAAY,kCAAkC,wDAPd,EASpC,IAGF,OACE,UAAC,IAAI,CAACL,SAAUH,EAAOS,aAAa,WAElC,UAAC,UAAU,CAACC,UAAU,OAAOC,UAAU,iBAAgB,WACrD,SAAC,UAAU,qBACX,SAAC,YAAY,CACXC,MAAOZ,EAAOa,OAAOzB,MACrB0B,SAAUd,EAAOe,aACjBC,OAAQhB,EAAOiB,WACfC,KAAK,QACLC,KAAK,QACLC,YAAY,qBAEbpB,EAAOqB,QAAQjC,OAASY,EAAOsB,OAAOlC,QACrC,SAAC,SAAS,CAACsB,UAAU,aAAY,SAAEV,EAAOsB,OAAOlC,YAKrD,UAAC,UAAU,CAACsB,UAAU,OAAOC,UAAU,oBAAmB,WACxD,SAAC,UAAU,wBACX,SAAC,YAAY,CACXC,MAAOZ,EAAOa,OAAOtB,SACrBuB,SAAUd,EAAOe,aACjBC,OAAQhB,EAAOiB,WACfC,KAAK,WACLC,KAAK,WACLC,YAAY,aAEbpB,EAAOqB,QAAQ9B,UAAYS,EAAOsB,OAAO/B,WACxC,SAAC,SAAS,CAACmB,UAAU,aAAY,SAAEV,EAAOsB,OAAO/B,eAKrD,SAAC,EAAAgC,KAAI,CACHC,GAAG,gBACHd,UAAU,uDAAsD,iCAKlE,SAAC,UAAS,CAACd,QAASA,EAAS6B,SAAU7B,EAAS8B,MAAM,YAG5D,C","sources":["pages/auth/LogIn.jsx"],"sourcesContent":["import { useFormik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\nimport { toast } from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport SubmitBtn from \"../../components/buttons/SubmitBtn\";\nimport { login } from \"../../store/auth\";\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(\n      /^[a-zA-Z0-9]+@[a-zA-Z]+\\.[a-zA-Z]{2,3}$/i,\n      \"Please enter a valid email address\"\n    )\n    .required(\"Please enter email\"),\n  password: Yup.string()\n    .matches(\n      /(?=.*[a-z]{2,})(?=.*[A-Z]{2,})(?=.*[0-9]{3,})(?=.*[@$%#]{1,})[a-zA-Z\\d@$%#]{8,}/,\n      \"Please enter a password like that | aaAA889@\"\n    )\n    .required(\"Please enter password\"),\n});\n\nfunction LogIn() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { loading } = useSelector((state) => state.authSlice);\n\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    async onSubmit(data, { resetForm }) {\n      try {\n        resetForm();\n        await dispatch(login(data)).unwrap();\n        navigate(\"/\");\n        toast.success(`Login Successfully`);\n      } catch (error) {\n        toast.error(\"Email or password not correct!\");\n      }\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      {/* Email */}\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email</Form.Label>\n        <Form.Control\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter your email\"\n        />\n        {formik.touched.email && formik.errors.email && (\n          <Form.Text className=\"text-muted\">{formik.errors.email}</Form.Text>\n        )}\n      </Form.Group>\n\n      {/* Password */}\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n        />\n        {formik.touched.password && formik.errors.password && (\n          <Form.Text className=\"text-muted\">{formik.errors.password}</Form.Text>\n        )}\n      </Form.Group>\n\n      {/* Go to create a new account */}\n      <Link\n        to=\"/auth/sign-up\"\n        className=\"d-block link-underline link-underline-opacity-0 mb-4\"\n      >\n        Create new account\n      </Link>\n\n      <SubmitBtn loading={loading} disabled={loading} title=\"Login\" />\n    </Form>\n  );\n}\n\nexport default LogIn;\n"],"names":["validationSchema","Yup","shape","email","matches","required","password","dispatch","useDispatch","navigate","useNavigate","loading","useSelector","state","authSlice","formik","useFormik","initialValues","onSubmit","data","resetForm","login","unwrap","toast","handleSubmit","className","controlId","value","values","onChange","handleChange","onBlur","handleBlur","type","name","placeholder","touched","errors","Link","to","disabled","title"],"sourceRoot":""}